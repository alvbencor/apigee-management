<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Inventario de APIs</title>
  <style>
    body { font-family: monospace; margin: 2rem auto; width: 80%; background-color: #3e5248; color: beige; }
    h1 { font-family: sans-serif; color: beige; }
    .dropzone { border: 2px dashed #afe2b1; width: 300px; height: 200px; margin: 1rem 0; display: flex; align-items: center; justify-content: center; text-align: center; color: #afe2b1; cursor: pointer; float: left; }
    .dropzone.hover { background-color: #52675b; }
    .loaded-message { font-size: 1rem; color: #afe2b1; margin-bottom: 1rem; display: none; clear: both; }
    .input-group, .filter-toggle, .filter-options, .actions, table, #stats, #resultCount { display: none; clear: both; }
    .input-group { margin: 1rem 0; }
    .input-group input { width: 100%; max-width: 30rem; padding: 0.5rem; border: none; border-radius: 4px; background: #52675b; color: beige; }
    .filter-toggle { margin: 1rem 0; }
    .filter-options { margin: 1rem 0; }
    .actions { margin: 3rem 0; }
    .actions button { padding: 0.5rem 1rem; margin-right: 0.5rem; border: none; border-radius: 4px; cursor: pointer; }
    .copy-btn { background: #afe2b1; color: #3c3f3f; }
    .export-btn { background: #ffe2b1; color: #3c3f3f; }
    table { width: 100%; border-collapse: collapse; margin-bottom: 2rem; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
    th { background: #afe2b1; color: #3c3f3f; }
    tr:nth-child(even) { background: #52675b; }
    #stats, #resultCount { margin: 1rem 0; font-size: 1rem; }
  </style>
</head>
<body>
  <h1>Inventario de APIs</h1>
  <div id="stats"></div>
  <div class="dropzone" id="dropzone">Arrastra tu CSV<br>o haz clic aquí</div>
  <div class="loaded-message" id="loadedMessage">✓ Archivo cargado: <span id="loadedName"></span></div>
  <input type="file" id="fileInput" accept=".csv" style="display:none" />
  <div class="input-group" id="searchGroup"><input id="search" type="text" placeholder="Escribe para filtrar..." /></div>
  <div class="filter-toggle" id="filterToggle"><button id="btnToggleFilters">Mostrar filtros</button></div>
  <div class="filter-options" id="filterOptions">
    <label><input type="checkbox" id="chkApp" checked /> Apps</label>
    <label><input type="checkbox" id="chkDev" checked /> Developers</label>
    <label><input type="checkbox" id="chkProd" checked /> Productos</label>
    <label><input type="checkbox" id="chkProxy" checked /> Proxies</label>
    <label><input type="checkbox" id="chkKVM" checked /> KVM</label>
    <label><input type="checkbox" id="chkTarget" checked /> Targets</label>
    <br />
    <label><input type="checkbox" id="chkProdSinApp" /> Sólo productos sin app</label>
    <label><input type="checkbox" id="chkProxySinProd" /> Sólo proxies sin producto</label>
  </div>
  <div class="actions" id="actionsGroup">
    <button class="copy-btn" id="copyBtn">Copiar tabla</button>
    <button class="export-btn" id="exportBtn">Exportar a CSV</button>
  </div>
  <div id="resultCount">Total resultados: <span id="countNumber">0</span></div>
  <table id="inventoryTable"><thead><tr id="headerRow"></tr></thead><tbody></tbody></table>
  <script src="https://unpkg.com/papaparse@5.4.1/papaparse.min.js"></script>
  <script>
    let data = [], filtered = [], isDefault = false;
    const dropzone = document.getElementById('dropzone');
    const fileInput = document.getElementById('fileInput');
    const loadedMessage = document.getElementById('loadedMessage');
    const loadedName = document.getElementById('loadedName');
    const statsDiv = document.getElementById('stats');
    const searchGroup = document.getElementById('searchGroup');
    const filterToggle = document.getElementById('filterToggle');
    const filterOptions = document.getElementById('filterOptions');
    const actionsGroup = document.getElementById('actionsGroup');
    const resultCountDiv = document.getElementById('resultCount');
    const countNumber = document.getElementById('countNumber');
    const table = document.getElementById('inventoryTable');
    const headerRow = document.getElementById('headerRow');
    const btnToggleFilters = document.getElementById('btnToggleFilters');
    function setupHeader(cols) { headerRow.innerHTML = ''; cols.forEach(c => { const th = document.createElement('th'); th.textContent = c; headerRow.appendChild(th); }); }
    ['dragenter','dragover'].forEach(evt => dropzone.addEventListener(evt, e => { e.preventDefault(); dropzone.classList.add('hover'); }));
    ['dragleave','drop'].forEach(evt => dropzone.addEventListener(evt, e => { e.preventDefault(); dropzone.classList.remove('hover'); }));
    dropzone.addEventListener('drop', e => handleFile(e.dataTransfer.files[0]));
    dropzone.addEventListener('click', () => fileInput.click());
    fileInput.addEventListener('change', () => handleFile(fileInput.files[0]));
    btnToggleFilters.addEventListener('click', () => { const vis = filterOptions.style.display === 'block'; filterOptions.style.display = vis ? 'none' : 'block'; btnToggleFilters.textContent = vis ? 'Mostrar filtros' : 'Ocultar filtros'; });
    function handleFile(file) {
      if (!file) return;
      dropzone.style.display = 'none';
      loadedName.textContent = file.name;
      loadedMessage.style.display = 'block';
      isDefault = file.name.includes('-default');
      if (isDefault) {
        statsDiv.style.display = 'none';
        searchGroup.style.display = 'none';
        filterToggle.style.display = 'none';
        filterOptions.style.display = 'none';
        actionsGroup.style.display = 'none';
        resultCountDiv.style.display = 'none';
        table.style.display = 'block';
        setupHeader(['Producto','Apps','Proxies','Descartable','Razón']);
      } else {
        statsDiv.style.display = 'block';
        searchGroup.style.display = 'block';
        filterToggle.style.display = 'block';
        filterOptions.style.display = 'block';
        actionsGroup.style.display = 'block';
        resultCountDiv.style.display = 'block';
        table.style.display = 'block';
        setupHeader(['App','Developer','Producto','Proxy','KVM','Target']);
      }
      Papa.parse(file, { header:true, delimiter:';', skipEmptyLines:true, complete: res => { data = res.data; initialize(); } });
    }
    function initialize() {
      if (!isDefault) {
        const a = new Set(data.map(r => r.App).filter(x => x)).size;
        const p = new Set(data.map(r => r.APIProduct).filter(x => x)).size;
        const z = new Set(data.map(r => r.Proxy).filter(x => x)).size;
        statsDiv.textContent = `Apps: ${a} | Productos: ${p} | Proxies: ${z}`;
      }
      renderDefault();
    }
    function renderDefault() {
      const tbody = table.querySelector('tbody'); tbody.innerHTML = '';
      if (isDefault) {
        data.forEach(r => {
          const tr = document.createElement('tr');
          ['Producto','Apps','Proxies','Descartable','Razón'].forEach(c => {
            const td = document.createElement('td'); td.textContent = r[c] || ''; tr.appendChild(td);
          });
          tbody.appendChild(tr);
        });
      } else {
        // Standard rendering omitted for brevity
      }
    }
  </script>
</body>
</html>
